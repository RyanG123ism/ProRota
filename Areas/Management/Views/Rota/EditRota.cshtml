@model Dictionary<string, ViewRotaViewModel>
@using ProRota.Areas.Management.ViewModels
@using Newtonsoft.Json

@{
    ViewData["Title"] = "View Weekly Rota";
    var weekEndingDate = ViewBag.WeekEndingDate != null ? (DateTime)ViewBag.WeekEndingDate : DateTime.Today;
    var weekStartingDate = ViewBag.WeekStartingDate != null ? (DateTime)ViewBag.WeekStartingDate : DateTime.Today;
}

<div class="container mt-4">
    <div class="card shadow-sm p-4">
        <div class="card-header text-center">
            <h1 class="display-5">Rota Management</h1>
            <h3>Week Ending - <b>@weekEndingDate.ToString("dd/MM/yyyy")</b></h3>
        </div>
        <div class="card-body text-center">
            <div class="d-flex flex-wrap justify-content-center gap-2 mb-4">
                <a href="#" class="btn btn-secondary" id="backToListButton">Back to List</a>

                <form id="saveRotaForm" asp-area="Management" asp-controller="Rota" asp-action="EditRota" method="post">
                    @Html.AntiForgeryToken() <!-- CSRF Token -->
                    <input type="hidden" name="publishStatus" id="publishStatusInput" value="@ViewBag.UnpublishedShifts" />
                    <input type="hidden" name="weekEndingDate" id="weekEndingDateInput" value="@weekEndingDate.ToString("yyyy-MM-dd")" />
                    <input type="hidden" name="editedShifts" id="editedShiftsInput" />
                </form>

                <button type="button" class="btn btn-primary" id="saveChanges">Save Changes</button>

                    <form asp-area="Management" asp-controller="Rota" asp-action="ViewWeeklyRota">
                            <input type="hidden" name="weekEnding" value="@weekEndingDate" />
                    <button type="submit" class="btn btn-primary" onclick="alert('Warning: Any changes made will not be saved if you exit edit mode');">Exit</button>
                </form> 
                    
            </div>

            <!-- Weekly Rota Table -->
            <div class="table-responsive">
                <table id="weeklyRotaTable" class="table table-hover">
                    <thead>
                        <tr>
                            <th>Employee</th>
                            <th>Role Category</th>
                            <th>Role</th>
                            <th>Monday</th>
                            <th>Tuesday</th>
                            <th>Wednesday</th>
                            <th>Thursday</th>
                            <th>Friday</th>
                            <th>Saturday</th>
                            <th>Sunday</th>
                            <th>Total Hours</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var kvp in Model)
                        {
                            var employeeData = kvp.Value;
                            var shifts = employeeData.Shifts as List<Shift>;
                            var timeOffRequests = employeeData.TimeOffRequests as List<TimeOffRequest>;
                            var employeeId = kvp.Key;
                            var employeeName = $"{employeeData.FirstName} {employeeData.LastName}";

                            <tr data-user-id="@employeeId" data-firstname="@employeeData.FirstName"
                                data-lastname="@employeeData.LastName" data-role="@employeeData.Role">

                                <td><strong>@employeeName</strong></td>
                                <td>@employeeData.RoleCategory</td>
                                <td>@employeeData.Role</td>

                                @for (int i = 0; i < 7; i++)
                                {
                                    var currentDate = weekStartingDate.AddDays(i);
                                    var shift = (shifts ?? new List<Shift>()).FirstOrDefault(s => s.StartDateTime.HasValue && s.StartDateTime.Value.Date == currentDate.Date);
                                    var timeOffRequest = (timeOffRequests ?? new List<TimeOffRequest>()).FirstOrDefault(t => t.Date.Date == currentDate.Date);

                                    <td class="shift-cell @(timeOffRequest != null ? "non-clickable" : "")"
                                        data-date="@currentDate.ToString("yyyy-MM-dd")"
                                        data-start-time="@(shift?.StartDateTime.HasValue == true ? shift.StartDateTime.Value.ToString("HH:mm") : "")"
                                        data-end-time="@(shift?.EndDateTime.HasValue == true ? shift.EndDateTime.Value.ToString("HH:mm") : "")">

                                        @if (timeOffRequest != null)
                                        {
                                            <span class="text-warning">HOLIDAY</span>
                                        }
                                        else if (shift != null)
                                        {
                                            <span class="shift-time">@shift.StartDateTime.Value.ToString("HH:mm") - @shift.EndDateTime.Value.ToString("HH:mm")</span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">OFF</span>
                                        }
                                    </td>
                                }

                                @* Total hours column *@
                                <td class="total-hours">0</td>
                            </tr>
                        }

                    </tbody>

                </table>
            </div>
        </div>
    </div>
</div>

<!-- Shift Modal -->
<div id="shiftModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Manage Shift</h5>
            </div>
            <div class="modal-body">
                <input type="hidden" id="modalUserId">
                <input type="hidden" id="modalShiftDate">

                <p><strong>Employee:</strong> <span id="modalEmployeeName"></span></p>
                <p><strong>Role:</strong> <span id="modalRole"></span></p>
                <p><strong>Day:</strong> <span id="modalDay"></span></p>
                <p><strong>Date:</strong> <span id="modalFullDate"></span></p>

                <div class="form-group">
                    <label>Start Time</label>
                    <input type="time" id="shiftStartTime" class="form-control">
                </div>
                <div class="form-group">
                    <label>End Time</label>
                    <input type="time" id="shiftEndTime" class="form-control">
                </div>
            </div>
            <div class="modal-footer">
                <button id="addShiftButton" class="btn btn-success">Add Shift</button>
                <button id="editShiftButton" class="btn btn-primary" disabled>Edit Shift</button>
                <button id="deleteShiftButton" class="btn btn-danger">Delete Shift</button>
                <button class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>


<script>
    document.addEventListener("DOMContentLoaded", function () {
        highlightTableCellsforWeeklyRota();
        setupShiftClickListeners();
        calculateTotalHours();

        document.getElementById("saveChanges").addEventListener("click", function () {
            let editedShiftsJson = JSON.stringify(editedShifts);
            document.getElementById("editedShiftsInput").value = editedShiftsJson; //extract js dictionary data

            document.getElementById("saveRotaForm").submit();//submit the form like a normal POST request
        });

        let backButton = document.getElementById("backToListButton");
        if (backButton) {
            backButton.addEventListener("click", function (event) {
                event.preventDefault();

                let confirmExit = confirm("Warning: Your rota will not be saved if you leave this page. Are you sure you want to continue?");
                if (confirmExit) {
                    window.location.href = '@Url.Action("Index", "Rota", new { area = "Management" })';
                }
            });
        }
    });
</script>
