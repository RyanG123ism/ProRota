@model ProRota.Areas.Management.Models.EditApplicationUserViewModel

@{
    ViewData["Title"] = "Edit User";
}

<div class="card shadow-sm p-3 mb-5">
    <div class="card-header text-center">
        <h1 class="display-4">User Management</h1>
        <h3>Edit a User</h3>
    </div>
    <div class="card-body text-center">
        <div class="container">
            <h2>Edit User</h2>

            @using (Html.BeginForm("EditApplicationUser", "ApplicationUser", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.Email)
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName)
                    @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName)
                    @Html.TextBoxFor(model => model.LastName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Salary)
                    @Html.TextBoxFor(model => model.Salary, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ContractualHours)
                    @Html.TextBoxFor(model => model.ContractualHours, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ContractualHours, "", new { @class = "text-danger" })
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.Notes)
                    @Html.TextBoxFor(model => model.Notes, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                </div>

                @* Read Only attribute *@
                <div class="form-group">
                    @Html.LabelFor(model => model.CurrentRole)
                    @Html.TextBoxFor(model => model.CurrentRole, new { @class = "form-control", @readonly = "readonly" })
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Role, new SelectList(Model.Roles, "Value", "Text"), "-- Select Role --", new { @class = "form-control mb-3" })
                        @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="mb-3">
                    <!-- Add margin bottom to create space -->
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>

            }

            <div class="mb-3">
                <!-- Add margin bottom to create space -->
                <!-- Optionally, you can add a link to go back to the user list -->
                @Html.ActionLink("Back to User List", "Index", "ApplicationUser", null, new { @class = "btn btn-secondary" })
            </div>



        </div>

    </div>
</div>

