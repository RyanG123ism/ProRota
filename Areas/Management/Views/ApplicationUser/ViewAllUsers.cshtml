@model IEnumerable<ProRota.Models.ApplicationUser>
@using Microsoft.AspNetCore.Identity
@using ProRota.Models
@using System.Security.Claims;

@inject UserManager<ApplicationUser> UserManager


@{
    ViewData["Title"] = "ViewAllUsers";
}
<div class="card shadow-sm p-3 mb-5" @* style="background-color: #f8f9fa; border: none;" *@>
    <div class="card-header text-center">
        <h1 class="display-4">Management Dashboard</h1>
        <h3>User Management</h3>
    </div>
    <div class="card-body">
        <!-- Search for user by full name -->
        <form method="get" action="@Url.Action("SearchForUser", "ApplicationUser")">
            <div class="input-group mb-3">
                <input type="text" name="fullName" class="form-control rounded-pill" placeholder="Enter full name">
                <button type="submit" class="btn btn-secondary rounded-pill px-4">🔍 Search</button>
            </div>
        </form>

        <!-- Search by Role Dropdown -->
        @using (Html.BeginForm("ViewAllUsersByRole", "ApplicationUser", FormMethod.Get))
        {
            <div class="input-group mt-3">
                <select name="id" id="roleId" class="form-select rounded-pill">
                    @foreach (var role in ViewBag.Roles)
                    {
                        <option value="@role.Id">@role.Name</option>
                    }
                </select>
                <button type="submit" class="btn btn-secondary rounded-pill px-4">🔍 Search</button>
            </div>
        }

        <!-- Button to create new user -->
        <div style="margin-top: 10px;">
            <a asp-area="Management" asp-controller="ApplicationUser" asp-action="CreateApplicationUser" class="btn btn-primary">Create User</a>
        </div>

        <!-- Link to return to original "View All Users" view -->
        <div style="margin-top: 10px;">
            <a asp-area="Management" asp-controller="ApplicationUser" asp-action="Index" class="btn btn-primary">Reset</a>
        </div>

        <!-- Count of the users -->
        <h3 class="font-weight-bold text-center" style="padding-top: 10px;">@Model.Count() Employees</h3>

        @if (Model == null || !Model.Any())
        {
            <p> No employees of this site currently</p>
        }
        else
        {
            <div class="table-responsive">
                <table class="table table-hover">
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.Email)</th>
                        <th>@Html.DisplayNameFor(model => model.FirstName)</th>
                        <th>@Html.DisplayNameFor(model => model.LastName)</th>
                        <th>Roles</th>
                        <th>Actions</th>
                    </tr>

                    @foreach (var user in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => user.Email)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => user.FirstName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => user.LastName)
                            </td>

                            <!-- Display roles for the user -->
                            <td>
                                @{
                                    var roles = await UserManager.GetRolesAsync(user);
                                    @foreach (var role in roles)
                                    {
                                        @role <br />
                                    }
                                }
                            </td>

                            <td>

                                @if (User.FindFirstValue(ClaimTypes.NameIdentifier.ToString()) == user.Id)
                                {
                                    @* if the Id is the same as the logged in user - take to their own accoutns edit page *@
                                    @Html.ActionLink("Edit", "Manage", "Account", new { area = "Identity" })
                                }
                                else
                                {
                                    @Html.ActionLink("Edit", "EditApplicationUser", new { id = user.Id })
                                }

                                | @Html.ActionLink("Details", "Details", new { id = user.Id }) |
                                @Html.ActionLink("Deactivate", "DeactivateUser", new { id = user.Id })
                            </td>
                        </tr>

                    }
                </table>
            </div>
        }



        <h3 class="font-weight-bold text-center" style="padding-top: 10px;">@ViewBag.InvitedUsers.Count Pending Invites</h3>

        @if (ViewBag.InvitedUsers == null || ViewBag.InvitedUsers.Count == 0)
        {
            <p> No Pending Invites</p>
        }
        else
        {
            <div class="table-responsive">
                <table class="table table-hover">
                    <tr>
                        <th>Email</th>
                        <th>FirstName</th>
                        <th>LastName</th>
                        <th>Roles</th>
                        <th>Actions</th>
                    </tr>

                    @foreach (var user in ViewBag.InvitedUsers)
                    {
                        <tr>
                            <td>
                                @user.Email
                            </td>
                            <td>
                                @user.FirstName
                            </td>
                            <td>
                                @user.LastName
                            </td>

                            <!-- Display roles for the user -->
                            <td>
                                @{
                                    var roles = await UserManager.GetRolesAsync(user);
                                    @foreach (var role in roles)
                                    {
                                        @role <br />
                                    }
                                }
                            </td>

                            <td>
                                @Html.ActionLink("Deactivate", "DeactivateUser", new { id = user.Id }) | 
                                @Html.ActionLink("Resend Invite", "ResendInvite", new { id = user.Id })
                            </td>
                        </tr>

                    }
                </table>
            </div>
        }
    </div>
 </div>




