@model IEnumerable<ProRota.Models.TimeOffRequest>
@using Microsoft.AspNetCore.Identity
@using ProRota.Models
@using System.Security.Claims;

@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Manage Time-Off Requests";
}

<div class="container mt-4">
    <div class="card shadow-sm p-3 mb-5">
        <div class="card-header d-flex justify-content-between align-items-center">
            <div class="text-center w-100">
                <h1 class="display-5">Management Dashboard</h1>
                <h3>Manage Time-Off Requests</h3>
            </div>     
        </div>
        <br />
        <div class="card-body">

            <!-- Count of the requests -->
            <h3 class="font-weight-bold text-center mt-2">
                @Model.Count() @(ViewBag.Status != null ? ViewBag.Status : "") Time-Off Requests
            </h3>

            <!-- Filter Buttons -->
            <div class="d-flex justify-content-start gap-2 mb-3">
                <form method="get" asp-action="SortByRequestStatus" asp-controller="TimeOffRequest">
                    <input type="hidden" name="status" value="Approved">
                    <button class="btn btn-success" type="submit">Approved</button>
                </form>

                <form method="get" asp-action="SortByRequestStatus" asp-controller="TimeOffRequest">
                    <input type="hidden" name="status" value="Pending">
                    <button class="btn btn-primary" type="submit">Pending</button>
                </form>

                <form method="get" asp-action="SortByRequestStatus" asp-controller="TimeOffRequest">
                    <input type="hidden" name="status" value="Denied">
                    <button class="btn btn-warning" type="submit">Denied</button>
                </form>

                <a asp-action="Index" asp-controller="TimeOffRequest" class="btn btn-primary">View All Requests</a>
            </div>

           

            <!-- Time-Off Requests Table -->
            <table class="table table-hover text-center">
                <thead>
                    <tr>
                        <th>Site ID</th>
                        <th>Employee</th>
                        <th>Date</th>
                        <th>Notes</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var request in Model)
                    {
                        <tr>
                            <td>@request.ApplicationUser.SiteId</td>
                            <td>@request.ApplicationUser.FirstName @request.ApplicationUser.LastName</td>
                            <td>@request.Date.ToString("dd/MM/yyyy")</td>
                            <td>@request.Notes</td>
                            <td>@request.IsApproved</td>
                            <td>
                                @if (request.Date > ViewBag.Tomorrow)
                                {
                                    if (request.IsApproved == ApprovedStatus.Approved || request.IsApproved == ApprovedStatus.Denied)
                                    {
                                        @Html.ActionLink("Revert", "RevertTimeOffRequest", "TimeOffRequest", new { id = request.Id }, new { @class = "btn btn-secondary btn-sm" })
                                    }
                                    else
                                    {
                                        @Html.ActionLink("Approve", "ApproveTimeOffRequest", "TimeOffRequest", new { id = request.Id }, new { @class = "btn btn-primary btn-sm" })
                                        @Html.ActionLink("Decline", "DeclineTimeOffRequest", "TimeOffRequest", new { id = request.Id }, new { @class = "btn btn-warning btn-sm ml-2" })
                                    }
                                }
                                else
                                {
                                    <span class="text-muted">Expired</span>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <!-- Confirmation Modal -->
            @if (!string.IsNullOrEmpty(ViewBag.ConformationMessage as string))
            {
                <div class="modal fade" id="confirmationModal" tabindex="-1" aria-labelledby="confirmationModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="confirmationModalLabel">Confirmation</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                @ViewBag.ConformationMessage
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            </div>
                        </div>
                    </div>
                </div>
            }

        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Show modal if it exists
        const confirmationModalElement = document.getElementById('confirmationModal');
        if (confirmationModalElement) {
            const confirmationModal = new bootstrap.Modal(confirmationModalElement);
            confirmationModal.show();
        }
    });
</script>
